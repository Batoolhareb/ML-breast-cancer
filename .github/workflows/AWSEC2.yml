name: CI/CD - ML Breast Cancer Project

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test (CI)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

  deploy:
    name: Deploy to EC2 (CD)
    needs: build-and-test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.EC2_SSH_PORT || '22' }} -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts || true

      - name: Test SSH connection
        run: |
          ssh -p ${{ secrets.EC2_SSH_PORT || '22' }} \
              -o StrictHostKeyChecking=no \
              -i ~/.ssh/id_rsa \
              ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
              "echo âœ… SSH connection to EC2 successful"

      - name: Deploy with Docker Compose
        run: |
          ssh -p ${{ secrets.EC2_SSH_PORT || '22' }} \
              -o StrictHostKeyChecking=no \
              -i ~/.ssh/id_rsa \
              ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -xe
            APP_DIR=~/app-directory
            REPO_URL=https://github.com/Batoolhareb/ML-breast-cancer.git

            if [ ! -d "$APP_DIR" ]; then
              git clone "$REPO_URL" "$APP_DIR"
            fi

            cd "$APP_DIR"
            git fetch origin main
            git reset --hard origin/main
            git clean -fd

            sudo docker compose --profile job build
            sudo docker compose --profile job up -d
          EOF
